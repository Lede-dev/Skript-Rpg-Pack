
#========================================================================================================

#플레이어의 정보를 출력합니다.
command /rpp.print.PlayerInfo [<offlineplayer>]:
	permission: rpp.command.print
	trigger:
		if arg 1 is not set:
			if sender is console:
				send "&c플레이어를 입력해주세요."
				send "&c/rpp.print.PlayerInfo <Player>"
			else:
				set {_first} to rpp_TimeFormatted(rpp_GetFirstJoin(player))
				set {_last} to rpp_TimeFormatted(rpp_GetLastJoin(player))
				set {_play} to rpp_GetPlayTime(player)
				send "&e플레이어 &6%player%&e의 정보"
				send " &e- 최초 접속 시간 : &b%{_first}%"
				send " &e- 마지막 접속 시간 : &b%{_last}%"
				send " &e- 퇴장 시간 : &bONLINE"
				send " &e- 플레이 타임 : &b%{_play}%"				
		else if arg 1 is set:
			if rpp_IsPlayed(arg 1) is not true:
				send "%arg 1%"
				send "&c플레이어의 접속 기록이 존재하지 않습니다."
				stop
			set {_first} to rpp_TimeFormatted(rpp_GetFirstJoin(arg 1))
			set {_last} to rpp_TimeFormatted(rpp_GetLastJoin(arg 1))
			set {_quit} to rpp_TimeFormatted(rpp_GetQuit(arg 1))
			set {_play} to rpp_GetPlayTime(arg 1)
			if arg 1 is online:
				set {_quit} to "ONLINE"
			send "&e플레이어 &6%arg 1%&e의 정보"
			send " &e- 최초 접속 시간 : &b%{_first}%"
			send " &e- 마지막 접속 시간 : &b%{_last}%"
			send " &e- 퇴장 시간 : &b%{_quit}%"
			send " &e- 플레이 타임 : &b%{_play}%"
			

#모든 레벨업 요구 경험치량을 출력합니다.
command /rpp.print.levelUpExp:
	permission: rpp.command.print
	trigger:
		set {_exp::*} to rpp_GetVar_ExpSystem()
		set {_count} to 0
		loop {_exp::*}:
			send "&e%{_count}% -> %{_count}+1% : %loop-value%"
			add 1 to {_count}

#========================================================================================================

#경험치 시스템을 리로드합니다.
command /rpp.reload.Exp:
	permission: rpp.command.reload
	trigger:
		rpp_Reload_ExpSystem()
		set {_stat} to rpp_GetLevelUpPoint()
		set {_exp} to rpp_GetLevelUpExp()
		set {_rate} to rpp_GetLevelUpExpRate()
		set {_rate} to rpp_ConvertRateToPercent({_rate})
		set {_max} to rpp_GetMaxLevel()
		send "&e경험치 시스템 리로드 완료. 다음 항목들을 재설정하였습니다."
		send " &e- 레벨업 스텟포인트 : &b%{_stat}%"
		send " &e- 최초 레벨업 요구 경험치 : &b%{_exp}%"
		send " &e- 레벨업 요구 경험치 증가 비율 : &b%{_rate}%%%"
		send " &e- 최대 레벨 : &b%{_max}%"
		send ""
		send "&e레벨업 스텟포인트가 변경되었다면 다음 명령어를 이용하여 플레이어의 스텟을 초기화하고, 스텟포인트를 다시 지급해주세요"
		send "&e/rpp.debug.ResetPlayerStat"
		send ""
		send "&e레벨업 요구 경험치량은 다음 명령어를 이용하여 출력할 수 있습니다."
		send "&e/rpp.print/levelUpExp"
		send ""

#========================================================================================================

#플레이어가 직접 투자한 스텟을 경험치 시스템과 비교하여 재설정합니다.		
command /rpp.debug.ResetPlayerStat:
	permission: rpp.command.debug
	trigger:
		send "&e플레이어가 직접 투자한 스텟을 초기화하고, 스텟포인트를 지급합니다. 자세한 결과는 콘솔을 확인해주세요."
		rpp_ResetAllPlayerStat()
		
#플레이어가 직접 투자한 스텟을 변경된 비율 설정에 맞춰 업데이트 합니다.
command /rpp.debug.UpdatePlayerStat:
	permission: rpp.command.debug
	trigger:
		send "&e플레이어가 직접 투자한 스텟을 세부스텟 증가 비율에 맞춰 재설정합니다."
		rpp_UpdateAll(player)
		rpp_ApplyAll(player)
		
#플레이어를 최초 접속 상태로 전환
command /rpp.debug.FirstJoin:
	permission: rpp.command.debug
	trigger:
		send "&e최초 접속 기록을 삭제하였습니다."
		rpp_RemoveFirstJoin(player)
		
#플레이어의 직업이 정상적으로 설정되어있는지 확인하고 비 정상적이라면 해당 플레이어의 직업을 기본 직업으로 초기화
command /rpp.debug.UpdatePlayerJob:
	permission: rpp.command.debug
	trigger:
		send "&e모든 플레이어의 직업을 점검합니다. 자세한 결과는 콘솔을 확인해주세요"
		rpp_updateAllPlayersJob()

#========================================================================================================

#스텟 GUI를 플레이어에게 오픈합니다.
command /rpp.user.PlayerStat:
	permission: rpp.command.user
	aliases: 스텟, 스텟창, tmxpt, tmxptckd, stat
	trigger:
		set {_inv} to rpp_GetStatGUI(player)
		open {_inv} to player
		
#플레이어의 현재 직업을 확인합니다.
command /rpp.user.PlayerJob:
	permission: rpp.command.user
	aliases: 직업, wlrdjq, job
	trigger:
		set {_job} to rpp_GetPlayerJob(arg 1)
		send "&f당신의 현재 직업은 &6%{_job}%&f입니다."
		
#========================================================================================================

#경험치북을 생성합니다.
command /rpp.util.expbook [<number>]:
	permission: rpp.command.util
	trigger:
		set {_book} to book named "경험치북"
		set line 1 of lore of {_book} to "%arg 1%"
		add {_book} to inventory of player
		
#직업을 추가합니다.
command /rpp.util.addJob [<string>]:
	permission: rpp.command.util
	trigger:
		if arg 1 is not set:
			send "&c추가할 직업을 입력해주세요. /rpp.util.addJob <직업 이름>"
			stop

		if rpp_IsJobRegisted(arg 1):
			send "&c이미 등록된 직업입니다."
			stop
			
		rpp_AddJob(arg 1)
		send "&e직업 &6%arg 1%&e을(를) &a등록&e하였습니다."
		stop

#직업을 삭제합니다.
command /rpp.util.removeJob [<string>]:
	permission: rpp.command.util
	trigger:
		if arg 1 is not set:
			send "&c제거할 직업을 입력해주세요. /rpp.util.removeJob <직업 이름>"
			stop
			
		if rpp_IsJobRegisted(arg 1) is false:
			send "&c등록되지 않은 직업입니다."
			stop	
			
		rpp_RemoveJob(arg 1)
		send "&e직업 &6%arg 1%&e을(를) &c삭제&e하였습니다."
		stop
		
#직업 목록 출력
command /rpp.util.jobList:
	permission: rpp.command.util
	trigger:
		set {_job::*} to rpp_GetJob()
		if {_job::*} is not set:
			send "&c등록된 직업이 존재하지 않습니다."
			stop
		
		send " "
		send "&e직업 목록"
		loop {_job::*}:
			send " &e- %loop-value%"
		send " "

# 기본 직업 설정
command /rpp.util.setDefaultJob [<string>]:
	permission: rpp.command.util
	trigger:
		if arg 1 is not set:
			send "&c기본 직업으로 설정할 직업을 입력해주세요"
			stop
			
		if rpp_IsJobRegisted(arg 1) is false:
			send "&c등록되지 않은 직업입니다."
			stop
			
		rpp_SetDefaultJob(arg 1)
		send "&e직업 &6%arg 1%&e을(를) 기본 직업으로 설정하였습니다."
		stop
	
# 플레이어의 직업 설정	
command /rpp.util.SetPlayerJob [<offlineplayer>] [<string>]:
	permission: rpp.command.util
	trigger:
		if arg 1 is not set:
			send "&c직업을 설정할 플레이어를 입력해주세요"
			stop
		
		if arg 2 is not set:
			send "&c플레이어에게 설정할 직업을 입력해주세요"
			stop
			
		if rpp_IsPlayed(arg 1) is false:
			send "&c존재하지 않는 플레이어입니다."
			stop
			
		if rpp_IsJobRegisted(arg 2) is false:
			send "&c등록되지 않은 직업입니다."
			stop			
		
		rpp_SetPlayerJob(arg 1, arg 2)
		send "&e플레이어 &6%arg 1%&e의 직업을 &6%arg 2%&e로 설정하였습니다."
		stop


# 플레이어의 직업 확인
command /rpp.util.GetPlayerJob [<offlineplayer>]:
	permission: rpp.command.util
	trigger:
		if arg 1 is not set:
			send "&c직업을 확인할 플레이어를 입력해주세요"
			stop

		if rpp_IsPlayed(arg 1) is false:
			send "&c존재하지 않는 플레이어입니다."
			stop
		
		set {_job} to rpp_GetPlayerJob(arg 1)
		send "&e플레이어 &6%arg 1%&e의 직업은 &6%{_job}%&e입니다."
		
#직업 변경권 생성
command /rpp.util.ChangeJobTicket [<string>]:
	permission: rpp.command.util
	trigger:
		give 1 of rpp_changeJobTicket(arg 1) to player
		send "&e아이템 지급 완료."
		stop


#========================================================================================================
command /rpp.emiji.ez:
	permission: rpp.command.emoji
	trigger:
		broadcast "░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
		broadcast "░░░█▀▀▀░█▀▀█░░█▀▀░▀▀█░░█░░"
		broadcast "░░░▀▀▀█░█░░█░░█▀▀░▄▀░░░▀░░"
		broadcast "░░░▀▀▀▀░▀▀▀▀░░▀▀▀░▀▀▀░░▀░░"
		broadcast "░░░░░░░░░░░░░░░░░░░░░░░░░░░░"
		broadcast "⎛⎝(•‿•)⎠⎞⎛⎝(•‿•)⎠⎞⎛⎝(•‿•)⎠⎞⎛⎝(•‿•)⎠⎞"




















